apiVersion: v1
kind: ServiceAccount
metadata:
  name: cb-dragonfly
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cb-dragonfly-agent-clusterrole
rules:
  - apiGroups: ["apps"]
    resources: ["*"]
    verbs: ["create", "get", "list", "watch", "delete"]
  - apiGroups: [""]
    resources: ["pods", "pods/log", "pods/exec", "serviceaccounts", "configmaps"]
    verbs: ["create", "get", "list", "watch", "delete"]
  - apiGroups: ["metrics.k8s.io"]
    resources: ["pods"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["nodes/proxy", "nodes/stats"]
    verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cb-dragonfly-agent-clusterrolebinding
subjects:
  - kind: ServiceAccount
    name: cb-dragonfly
    namespace: cb-dragonfly
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cb-dragonfly-agent-clusterrole
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: cb-dragonfly-agent-configmap
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: cb-dragonfly-agent
spec:
  selector:
    matchLabels: {}
  template:
    metadata:
    spec:
      volumes:
        - name: config
          configMap:
            name: cb-dragonfly-agent-configmap
            defaultMode: 420
      containers:
        - name: cb-dragonfly-agent
          image: 'telegraf:1.15.2'
          env:
            - name: HOST_IP
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: status.hostIP
            - name: HOSTNAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
          resources:
            limits:
              cpu: '1'
              memory: 2Gi
            requests:
              cpu: 100m
              memory: 256Mi
          volumeMounts:
            - name: config
              mountPath: /etc/telegraf
          imagePullPolicy: IfNotPresent
      serviceAccount: cb-dragonfly
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1